#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: 'Generate JVM Extensions'
description: 'Generates a Camel Quarkus JVM only extension'
inputs:
  artifact-ids:
    description: 'Comma separated list of Camel component artifact ids to generate JVM only extensions for. The artifact id can either be the base name (E.g activemq) or the full name (E.g camel-activemq).'
    required: true
runs:
  using: "composite"
  steps:
    - name: Generate JVM extensions
      shell: bash
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"

        ARTIFACT_IDS=$(echo "${{ inputs.artifact-ids }}" | sed 's/camel-//g')
        BRANCH_NAME="add-jvm-extensions-$(uuidgen | cut -f1 -d'-')"
        CHANGED=false

        git checkout -b ${BRANCH_NAME}

        # Filthy hack to disable parent / child modules and speed up build
        sed -i -e '/<module>integration\-tests\-support<\/module>/d' -e '/<module>integration\-tests<\/module>/d' -e '/<module>docs<\/module>/d' ./pom.xml

        # Unfortunately the catalog requires all of the extension projects to be built...
        ./mvnw -V -ntp -Dmaven.test.skip -Dquarkus.build.skip -Denforce=false -Dformat.skip clean install

        // Remove pom hacks
        git checkout pom.xml

        for ARTIFACT_ID in ${ARTIFACT_IDS}; do
          # Create extension
          ./mvnw -V -ntp cq:create -N -Dcq.artifactIdBase=${ARTIFACT_ID} -Dcq.nativeSupported=false

          # Verify extension builds, run formatting steps & docs generation 
          ./mvnw -V -ntp -DskipTests -Dquarkus.build.skip -pl extensions-jvm/${ARTIFACT_ID} -am -amd clean package

          git commit -am "${ARTIFACT_ID} JVM support"
          # CHANGED=true
        done


        IFS=${OLDIFS}

        if [[ "${CHANGED}" == "true" ]]; then
          gh pr create \ 
            --title="Add JVM only extensions for ${{ inputs.artifact-ids }}" \
            --body="This is an auto-generated pull request to add JVM only extensions for ${{ inputs.artifact-ids }}.\n\nYou can edit the changes by checking out branch ${BRANCH_NAME}" \
            --label="JVM"
        fi

