#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: 'Setup Test Matrices'
description: 'Sets up test matrices for matrix jobs'
outputs:
  matrix:
    description: 'The native integratio test module matrix'
    value: ${{ steps.set-native-matrix.outputs.matrix }}
  examples-matrix:
    description: 'The examples project module matrix'
    value: ${{ steps.set-examples-matrix.outputs.examples-matrix }}
  alternate-jvm-matrix:
    description: 'The alnative JVM module matrix'
    value: ${{ steps.set-alternate-jvm-matrix.outputs.alternate-jvm-matrix }}

runs:
  using: "composite"
  steps:
    - name: Setup Native Test Matrix
      id: set-native-matrix
      shell: bash
      run: |
        CATEGORIES=$(yq -M -N -I 0 -o=json e 'keys' tooling/scripts/test-categories.yaml | tr '"' "'")
        echo "matrix={'category': ${CATEGORIES}}" >> $GITHUB_OUTPUT
    - name: Setup Alternate JVM Matrix
      id: set-alternate-jvm-matrix
      shell: bash
      run: |
        cd integration-tests
        mvn help:evaluate -Dexpression=project.modules -N -q -DforceStdout | sed -e 's/<[^>]*>//g' -e 's/^[[:space:]]*//' -e '/^$/d' > ${{ runner.temp }}/itest-modules.txt
        GROUP1_MODULES=$(cat ${{ runner.temp }}/itest-modules.txt | grep -E '^[a-m].*' | tr '\n' ',' | sed 's/,$//')
        GROUP2_MODULES=$(cat ${{ runner.temp }}/itest-modules.txt | grep -E '^[n-z].*' | tr '\n' ',' | sed 's/,$//')
        echo "alternate-jvm-matrix={'include': [{'name': 'group-01', 'modules': '${GROUP1_MODULES}'},{'name': 'group-02', 'modules': '${GROUP2_MODULES}'}]}" >> $GITHUB_OUTPUT
    - name: Setup Examples Matrix
      id: set-examples-matrix
      shell: bash
      run: |
        EXAMPLES_BRANCH="camel-quarkus-main"
        if [[ ${GITHUB_REF_NAME} =~ [0-9]+.[0-9]+.x ]]; then
            EXAMPLES_BRANCH=${GITHUB_REF_NAME}
        elif [[ ${GITHUB_BASE_REF} =~ [0-9]+.[0-9]+.x ]]; then
            EXAMPLES_BRANCH=${GITHUB_BASE_REF}
        fi

        sudo apt install groovy -y --no-install-recommends
        EXAMPLES_MATRIX=$(groovy -DEXAMPLES_BRANCH=${EXAMPLES_BRANCH} tooling/scripts/generate-examples-matrix.groovy)
        echo "examples-matrix=${EXAMPLES_MATRIX}" >> $GITHUB_OUTPUT
