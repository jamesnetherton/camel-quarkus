#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: 'Initial Maven Install'
description: 'Performs the initial mvn install build step'
inputs:
  
outputs:
  matrix:
    description: 'The native integration test module matrix'
    value: ${{ steps.setup-test-matrices.outputs.matrix }}
  examples-matrix:
    description: 'The examples project module matrix'
    value: ${{ steps.setup-test-matrices.outputs.examples-matrix }}
  alternate-jvm-matrix:
    description: 'The alternative JVM module matrix'
    value: ${{ steps.setup-test-matrices.outputs.alternate-jvm-matrix }}

runs:
  using: "composite"
  steps:
    - name: Check free space on disk
      uses: ./.github/actions/check-disk-space
    - name: Set workflow build ID
      uses: ./.github/actions/set-workflow-build
    - name: Rebase from main branch
      if: github.event_name == 'schedule'
      uses: ./.github/actions/rebase-branch
    - name: Setup runner node
      uses: ./.github/actions/setup-runner
      with:
        download-maven-repo: 'false'
    - name: Build Camel
      if: github.ref == 'refs/heads/camel-main' || github.base_ref == 'camel-main' || github.workflow == 'Daily Build Camel Main branch'
      shell: bash
      run: |
        cd ../
        git clone --depth 1 --branch main https://github.com/apache/camel.git \
          && cd camel \
          && echo "Current Camel commit:" $(git rev-parse HEAD) \
          && ./mvnw ${CQ_MAVEN_ARGS} clean install -Dquickly -T1C
    - name: Build Quarkus
      if: github.ref == 'refs/heads/quarkus-main' || github.base_ref == 'quarkus-main' || github.workflow == 'Daily Build Quarkus Main branch'
      shell: bash
      run: |
        git clone --depth 1 --branch main https://github.com/quarkusio/quarkus.git \
          && cd quarkus \
          && echo "Current Quarkus commit:" $(git rev-parse HEAD) \
          && sed -i '/<module>integration-tests<\/module>/d' pom.xml \
          && ./mvnw ${CQ_MAVEN_ARGS} clean install -Dquickly -Prelocations -T1C
    - name: Update extension metadata
      shell: bash
      run: |
        ./mvnw -N cq:update-quarkus-metadata ${CQ_MAVEN_ARGS}
    - name: mvn clean install -DskipTests
      shell: bash
      run: |
        ./mvnw ${CQ_MAVEN_ARGS} ${BRANCH_OPTIONS} clean install -DskipTests -Dquarkus.build.skip -Pformat
    - name: Sync Maven properties
      shell: bash
      run: |
        ./mvnw cq:sync-versions ${CQ_MAVEN_ARGS} -N
    - name: Fail if there are uncommitted changes
      uses: ./.github/actions/check-uncommitted-changes
    - name: Upload Maven Repository
      uses: ./.github/actions/upload-maven-repo
    - name: Set Up Test Matrices
      id: setup-test-matrices
      uses: ./.github/actions/setup-test-matrices
    - name: Report build failure
      if: (failure() || cancelled()) && github.event_name == 'schedule'
      uses: ./.github/actions/report-build-failure
