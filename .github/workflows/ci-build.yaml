#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Camel Quarkus CI

on:
  push:
    branches:
      - main
      - camel-main
      - quarkus-main
      - "[0-9]+.[0-9]+.x"
    paths-ignore:
      - '**.adoc'
      - '**.md'
      - 'Jenkinsfile'
      - 'Jenkinsfile.*'
      - 'KEYS'
      - 'LICENSE.txt'
      - 'NOTICE.txt'
      - 'camel-quarkus-sbom/**'
      - '.github/*.sh'
      - '.github/*.yaml'
      - '.github/*.yml'
      - '.github/workflows/assign-issue-milestone.yaml'
      - '.github/workflows/assign-wontfix-issue-milestone.yaml'
      - '.github/workflows/camel-master-cron.yaml'
      - '.github/workflows/generate-sbom-main.yml'
      - '.github/workflows/label-issue.yaml'
      - '.github/workflows/pr-validate.yml'
      - '.github/workflows/quarkus-master-cron.yaml'
      - '.github/workflows/synchronize-dependabot-branch.yaml'
      - 'docs/antora.yml'
  pull_request:
    branches:
      - main-testing
      - camel-main
      - quarkus-main
      - "[0-9]+.[0-9]+.x"
    paths-ignore:
      - '**.adoc'
      - '**.md'
      - 'Jenkinsfile'
      - 'Jenkinsfile.*'
      - 'KEYS'
      - 'LICENSE.txt'
      - 'NOTICE.txt'
      - '.github/*.sh'
      - '.github/*.yaml'
      - '.github/*.yml'
      - '.github/workflows/assign-issue-milestone.yaml'
      - '.github/workflows/assign-wontfix-issue-milestone.yaml'
      - '.github/workflows/camel-master-cron.yaml'
      - '.github/workflows/generate-sbom-main.yml'
      - '.github/workflows/label-issue.yaml'
      - '.github/workflows/pr-validate.yml'
      - '.github/workflows/quarkus-master-cron.yaml'
      - '.github/workflows/synchronize-dependabot-branch.yaml'
      - 'docs/antora.yml'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  LANG: en_US.UTF-8
  MAVEN_OPTS: -Xmx3000m
  CQ_MAVEN_ARGS: -V -ntp -e -Daether.connector.http.connectionMaxTtl=120
  TESTCONTAINERS_RYUK_DISABLED: true
  CHECKOUT_REF: ${{ github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' && github.head_ref || '' }}

jobs:
  pre-build-checks:
    if: github.repository == 'jamesnetherton/camel-quarkus'
    runs-on: ubuntu-latest
    outputs:
      continue-build: ${{ steps.pre-build-checks.outputs.continue-build }}
      run-checks: ${{ steps.init.outputs.run-checks }}
    steps:
      - name: Initialize
        id: init
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]] && [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            echo "run-checks=true" >> $GITHUB_OUTPUT
          else
            echo "run-checks=false" >> $GITHUB_OUTPUT
          fi
      - name: Setup runner node
        uses: .github/actions/setup-runner
        with:
          download-maven-repo: 'false'
      - name: Pre build checks
        id: pre-build-checks
        run: |
          if [[ "${{ steps.init.outputs.run-checks }}" == "true" ]]; then
            ./mvnw cq:sync-versions -N ${CQ_MAVEN_ARGS}
            ./mvnw clean install -pl poms/bom -am -Dcq.flatten-bom.format --fail-never ${CQ_MAVEN_ARGS}
            ./mvnw clean install -f poms/bom ${CQ_MAVEN_ARGS}
            ./mvnw clean validate -pl docs ${CQ_MAVEN_ARGS}

            if [[ -z "$(git status --porcelain)" ]]; then
              echo "continue-build=true" >> $GITHUB_OUTPUT
            else
              mkdir ./dependabot-pr
              echo ${{ github.head_ref }} > ./dependabot-pr/BRANCH_REF
              echo "$GITHUB_REF" | awk -F / '{print $3}' >  ./dependabot-pr/PR_NUMBER
              git diff -p --binary > ./dependabot-pr/changes.patch

              echo "continue-build=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "continue-build=true" >> $GITHUB_OUTPUT
          fi
      - name: Upload dependabot changeset
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        if: steps.pre-build-checks.outputs.continue-build == 'false'
        with:
          name: dependabot-pr-changeset
          path: dependabot-pr/
          retention-days: 1

  initial-mvn-install:
    if: needs.pre-build-checks.outputs.continue-build == 'true'
    runs-on: ubuntu-latest
    needs: pre-build-checks
    outputs:
      matrix: ${{ steps.set-native-matrix.outputs.matrix }}
      examples-matrix: ${{ steps.set-examples-matrix.outputs.examples-matrix }}
      alternate-jvm-matrix: ${{ steps.set-alternate-jvm-matrix.outputs.alternate-jvm-matrix }}
    env:
      MAVEN_OPTS: -Xmx4600m
    steps:
      - name: Build Camel Quarkus
        uses: ./.github/actions/initial-mvn-install

  native-tests:
    name: Native Tests - ${{matrix.category}}
    needs: initial-mvn-install
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'JVM')
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.initial-mvn-install.outputs.matrix) }}
    steps:
      - name: Run Native Tests
        uses: .github/actions/native-tests

  functional-extension-tests:
    runs-on: ubuntu-latest
    needs: initial-mvn-install
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'JVM')
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Run Functional Extension Tests
        uses: .github/actions/functional-extension-tests

  extensions-jvm-tests:
    runs-on: ubuntu-latest
    needs: initial-mvn-install
    strategy:
      fail-fast: false
      matrix:
        java: [ '17', '21' ]
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Run Extension JVM Tests
        uses: .github/actions/extension-jvm-tests

  integration-tests-alternative-jdk:
    name: Integration Tests Alternative JDK 21 ${{matrix.name}}
    runs-on: ubuntu-latest
    needs: initial-mvn-install
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'JVM')
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.initial-mvn-install.outputs.alternate-jvm-matrix) }}
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Run Integration Tests Alternative JDK
        uses: .github/actions/integration-tests-alternative
        with:
          java-version: '21'
          test-modules: ${{ matrix.modules }}

  integration-tests-alternative-platform:
    runs-on: ${{ matrix.os }}
    needs: initial-mvn-install
    strategy:
      fail-fast: false
      matrix:
        os: [ 'windows-latest' ]
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'JVM')
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Run Integration Tests Alternative Platform
        uses: .github/actions/integration-tests-alternative
        with:
          test-modules: ${{ matrix.modules }}

  examples-tests:
    name: Examples Tests - ${{matrix.name}}
    needs: initial-mvn-install
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'JVM')
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.initial-mvn-install.outputs.examples-matrix) }}
    steps:
      - name: Run Examples Tests - ${{matrix.name}}
        uses: ./.github/actions/examples-tests
