#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Daily Build Camel Main branch

on:
  schedule:
    # Run every day at midnight
    - cron:  '56 10 * * *'

env:
  LANG: en_US.UTF-8
  MAVEN_OPTS: -Xmx3000m
  CQ_MAVEN_ARGS: -V -ntp -e -Daether.connector.http.connectionMaxTtl=120
  TESTCONTAINERS_RYUK_DISABLED: true
  ISSUE_ID: 74

jobs:
  initial-mvn-install:
    if: github.repository == 'jamesnetherton/camel-quarkus'
    runs-on: ubuntu-latest
    needs: pre-build-checks
    outputs:
      matrix: ${{ steps.initial-mvn-install.outputs.matrix }}
      examples-matrix: ${{ steps.initial-mvn-install.outputs.examples-matrix }}
      alternate-jvm-matrix: ${{ steps.initial-mvn-install.outputs.alternate-jvm-matrix }}
    env:
      MAVEN_OPTS: -Xmx4600m
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: camel-main
      - name: Build Camel Quarkus
        id: initial-mvn-install
        uses: ./.github/actions/initial-mvn-install

  native-tests:
    name: Native Tests - ${{matrix.category}}
    needs: initial-mvn-install
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.initial-mvn-install.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: camel-main
      - name: Run Native Tests
        uses: ./.github/actions/native-tests

  functional-extension-tests:
    runs-on: ubuntu-latest
    needs: initial-mvn-install
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: camel-main
      - name: Run Functional Extension Tests
        uses: ./.github/actions/functional-extension-tests

  extensions-jvm-tests:
    runs-on: ubuntu-latest
    needs: initial-mvn-install
    strategy:
      fail-fast: false
      matrix:
        java: [ '17', '21' ]
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: camel-main
      - name: Run Extension JVM Tests
        uses: ./.github/actions/extensions-jvm-tests

  integration-tests-alternative-jdk:
    name: Integration Tests Alternative JDK 21 ${{matrix.name}}
    runs-on: ubuntu-latest
    needs: initial-mvn-install
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'JVM')
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.initial-mvn-install.outputs.alternate-jvm-matrix) }}
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: camel-main
      - name: Run Integration Tests Alternative JDK
        uses: ./.github/actions/integration-tests-alternative
        with:
          java-version: '21'
          test-modules: ${{ matrix.modules }}

  integration-tests-alternative-platform:
    runs-on: ${{ matrix.os }}
    needs: initial-mvn-install
    strategy:
      fail-fast: false
      matrix:
        os: [ 'windows-latest' ]
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'JVM')
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: camel-main
      - name: Run Integration Tests Alternative Platform
        uses: ./.github/actions/integration-tests-alternative
        with:
          maven-extra-args: '-Dskip-testcontainers-tests'

  examples-tests:
    name: Examples Tests - ${{matrix.name}}
    needs: initial-mvn-install
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'JVM')
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.initial-mvn-install.outputs.examples-matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: camel-main
      - name: Run Examples Tests - ${{matrix.name}}
        uses: ./.github/actions/examples-tests

  handle-build-status:
    needs: native-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: camel-main
      - name: Setup runner node
        uses: ./.github/actions/setup-runner
      - name: Rebase from main branch
        uses: ./.github/actions/rebase-branch
        with:
          source: 'main-sha.txt'
      - name: Report build status
        id: report
        uses: ./.github/actions/report-build-status
      - name: Sync branch main to camel-main
        if: steps.report.outputs.overall_build_status == 'success'
        uses: ./.github/actions/sync-branch
        with:
          target-branch: camel-main

