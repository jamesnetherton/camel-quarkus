#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Generate JVM Extensions

on:
  workflow_dispatch:
    inputs:
      artifactIds:
        description: 'Comma separated list of Camel component artifact ids'     
        required: true

jobs:
  generate-jvm-extensions:
    if: github.repository == 'jamesnetherton/camel-quarkus'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
      - name: Generate JVM extensions
        id: generate
        uses: ./.github/actions/generate-jvm-extensions
        with:
          artifact-ids: ${{ github.event.inputs.artifactIds }}
      - name: Create Pull Request
        if: ${{ steps.generate.outputs.extensions-added }} == "true"
        run: |
          git push --set-upstream origin ${{ steps.generate.outputs.branch-name }}

          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} gh pr create \
            --title="Add JVM only extensions for ${{ steps.generate.outputs.extension-artifact-ids }}" \
            --body="This is an auto-generated pull request to add JVM only extensions for ${{ steps.generate.outputs.extension-artifact-ids }}.<br/><br/>You can edit the changes by checking out branch ${BRANCH_NAME}" \
            --label="JVM"
      - name: Cleanup
        if: failure()
        run: |
          if git branch | grep ${{ steps.generate.outputs.branch-name }}; then
            git push --set-upstream origin --delete ${{ steps.generate.outputs.branch-name }}
          fi
